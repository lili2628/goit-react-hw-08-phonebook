{"version":3,"file":"static/js/610.1fa579f0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","store/contacts/selectors.js","components/LoaderRing/LoaderRing.styled.jsx","components/LoaderRing/LoaderRing.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    width: 100%;\n    border: 2px solid #cecece;\n    border-radius: 5px;\n    box-shadow: 1px 1px 1px #4c1130;\n\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\nexport const FormData = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding-bottom: 20px;\n`;\n\nexport const FormLabel = styled.label`\n    font-size: 16px;\n    font-weight: 700;\n    cursor: pointer;\n\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    align-items: center;\n`;\n\nexport const FormInput = styled.input`\n    font-family: inherit;\n       \n    width: 200px;\n    padding: 6px;\n    margin: 0;\n    \n    font-size: 12px;\n    \n    border: 1px solid #cecece;\n    background: #F6F6f6;\n    border-radius: 4px;\n`;\n\nexport const AddBtn = styled.button`\n    display: block;\n    cursor: pointer;\n    padding: 8px 14px;\n    width: 120px;\n    margin-left: auto;\n    margin-right: auto;\n\n    border: 1px solid #cecece;\n    background: #f6f6f6;\n    box-shadow: inset 0px 20px 20px #ffffff;\n    border-radius: 8px;\n\n    &:hover {\n        box-shadow: inset 0px -20px 20px #ffffff;\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:active {\n        margin-top: 1px;\n        margin-bottom: -1px;\n        zoom: 1;\n    }\n`;","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.filter.filter;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const LoaderChar = styled.div`\n  margin: 0 auto;\n`;","import { ColorRing } from 'react-loader-spinner';\nimport { LoaderChar } from './LoaderRing.styled';\n\nfunction LoaderRing() {\n  return (\n    <LoaderChar>\n      <ColorRing color=\"#00BFFF\" height=\"32\" />\n    </LoaderChar>\n  );\n}\n\nexport default LoaderRing;","import React, {useState} from 'react';\nimport { Form, FormData, FormLabel, FormInput, AddBtn } from './ContactForm.styled'; \nimport { addContact } from 'store/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getLoading } from 'store/contacts/selectors';\nimport  LoaderRing from 'components/LoaderRing';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n\n  const onChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const onChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber(''); \n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (contacts.find(contact => contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase())) {\n      alert(`${e.target.elements.name.value} is already in contact`);\n    } else {\n       dispatch(addContact({ name, number}));\n    };\n\n    resetForm();\n  };\n\n\n    return (\n      <Form onSubmit={onSubmitForm}>\n        <FormData>\n          <FormLabel>\n            Name\n            <FormInput\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={onChangeName}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FormLabel>\n        \n          <FormLabel>\n            Number\n            <FormInput\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={onChangeNumber}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FormLabel>\n        </FormData>\n\n        {!isLoading && (\n          <AddBtn type=\"submit\">\n             Add contact\n           </AddBtn>\n        )}\n        {isLoading && <LoaderRing />}\n       \n      </Form>\n    );\n  }\n    \n\n\nexport default ContactForm;\n\n\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    list-style: none;\n    width: 100%;\n    padding-right: 5px;\n    padding-left: 5px;\n    margin: 0;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from './ContactList.styled';\n\n\nfunction ContactList({ children }) {\n  return <List>{children}</List>;\n}\n\nexport default ContactList;\n\nContactList.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\ndisplay: flex;\njustify-content: space-between;\n\n&:not(:last-child) {\n     margin-bottom: 10px;\n}\n`;\n\nexport const InfoContainer = styled.div`\ndisplay: flex;\nmargin: 0;\n`;\n\nexport const InfoItemContainer = styled.div`\n    width: 150px;\n    position: relative;\n`;\n\nexport const Data = styled.p`\n    display: block;\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    transform: translate(0, -50%);\n\n    align-items: str;\n\n    width: 100%;\n`;\n\nexport const DeleteBtn = styled.button`\n    font-family: inherit;\n    font-size: 100%;\n\n    font-family: inherit;\n    font-size: 12px;\n    font-weight: bold;\n\n    cursor: pointer;\n    padding: 8px 14px;\n    width: 120px;\n\n    border: 1px solid #cecece;\n    background: #f6f6f6;\n    box-shadow: inset 0px 20px 20px #ffffff;\n    border-radius: 8px;\n\n    &:hover {\n        box-shadow: inset 0px -20px 20px #ffffff;\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:active {\n        margin-top: 1px;\n        margin-bottom: -1px;\n        zoom: 1;\n    }\n`;","import { ListItem, InfoContainer, InfoItemContainer, Data, DeleteBtn } from './ContactItem.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'store/contacts/operations';\nimport { useEffect } from 'react';\nimport { getContacts, getError, getFilter, getLoading } from 'store/contacts/selectors';\nimport { fetchContacts } from 'store/contacts/operations';\n\nfunction ContactItem() {\n    const dispatch = useDispatch();\n    const normalizedFilter = useSelector(getFilter)?.toLowerCase() || '';\n    const contacts = useSelector(getContacts);\n    const isLoading = useSelector(getLoading);\n    const error = useSelector(getError);\n    const visibleContacts = contacts?.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n    useEffect(() => {dispatch(fetchContacts());\n                    }, [dispatch]);\n    return (\n      <>\n            {contacts.length > 0 && !error && (\n                <>\n                    {visibleContacts.map(({ id, name, number }) => {\n                        return (     \n                            <ListItem key={id}>\n                                <InfoContainer>\n                                    <InfoItemContainer>\n                                        <Data>{name}</Data>\n                                    </InfoItemContainer>\n                                    <InfoItemContainer>\n                                        <Data>{number}</Data>\n                                    </InfoItemContainer>\n                                </InfoContainer>\n                                <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                                    Delete contact\n                                </DeleteBtn>\n                            </ListItem>\n                        );\n                    })}\n                </>\n            )} \n\n          {!contacts.length && !error && !isLoading && (\n                <p>\n                    Your phonebook is empty. Please add contact.\n                </p>\n            )}\n            \n            \n            {error && error.message }\n\n    </>\n    );\n}\n\n\nexport default ContactItem;\n\n","import styled from '@emotion/styled';\n\nexport const FilterLable = styled.label`\nfont-size: 16px;\nfont-weight: 700;\ncursor: pointer;\n\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 35px;\n`; \n\nexport const FilterInput = styled.input`\nfont-family: inherit;\nfont-size: 12px;\n    \nwidth: 200px;\npadding: 6px;\n\nborder: 1px solid #cecece;\nbackground: #F6F6f6;\nborder-radius: 4px;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'store/contacts/filterSlice';\nimport { FilterLable, FilterInput } from './Filter.styled';\nimport { getContacts, getError, getFilter } from 'store/contacts/selectors';\n\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const error = useSelector(getError);\n \n  \n  return (\n    <>\n       {\n      contacts.length > 0 && !error && (\n        <FilterLable>Find contacts by name\n          <FilterInput\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={e => dispatch(changeFilter(e.target.value))}\n          />\n        </FilterLable>\n      )\n    }\n  </>\n  );\n}\n\nexport default Filter;\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    width: 450px;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Title = styled.h1`\n    text-align: center;\n    margin-top: 35px;\n    margin-bottom: 10px;\n`;\n\nexport const SubTitle = styled.h2`\n    text-align: center;\n    margin: 0;\n    margin-bottom: 20px;\n`;\n\nexport const ContactContainer = styled.div`\n    width: 100%;\n    padding-top: 35px;\n    padding-bottom: 35px;\n`;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ContactForm  from \"components/ContactForm\";\nimport  ContactList  from 'components/ContactList';\nimport  ContactItem from 'components/ContactItem';\nimport  Filter  from 'components/Filter';\nimport { getContacts } from 'store/contacts/selectors';\nimport { Container, Title, ContactContainer, SubTitle } from 'components/App.styled';\nimport { fetchContacts } from \"store/contacts/operations\";\n\nfunction Contacts() {\n    const dispatch = useDispatch();\n    const contacts  = useSelector(getContacts);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <Title>Phonebook</Title>\n            <ContactForm />\n                <ContactContainer>\n            <SubTitle>Contacts ({contacts.length})</SubTitle>\n                    <Filter />\n                    <ContactList>\n                        <ContactItem />\n                    </ContactList>\n                </ContactContainer>\n        </Container>\n        );\n}\n\nexport default Contacts;\n\n\n"],"names":["Form","styled","FormData","FormLabel","FormInput","AddBtn","getContacts","state","contacts","getFilter","filter","getLoading","isLoading","getError","error","LoaderChar","color","height","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","find","contact","toLowerCase","target","elements","value","alert","addContact","type","onChange","pattern","title","required","List","children","ListItem","InfoContainer","InfoItemContainer","Data","DeleteBtn","normalizedFilter","visibleContacts","includes","useEffect","fetchContacts","length","map","id","onClick","deleteContact","message","FilterLable","FilterInput","changeFilter","Container","Title","SubTitle","ContactContainer"],"sourceRoot":""}